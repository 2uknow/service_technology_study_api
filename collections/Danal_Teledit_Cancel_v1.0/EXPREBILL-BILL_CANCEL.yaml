
name: "EXPREBILL-BILL_CANCEL SMS 비점유결제 취소"
description: "Danal_Taldit_v1.0 자동화 테스트 - CJH"
version: "1.0.0"

# 공통 변수 불러오기
include: Danal_Teledit_Cancel_v1.0/conf.yaml



# ** ----------------------------------------------------------------------------------------------------------------
#  * [1차 호출] EXPREBILL
#  * ----------------------------------------------------------------------------------------------------------------*

steps:
  - name: "EXPREBILL"
    description: "비점유 결제 + AUTHKEY 전송"

    args:
      Command: "EXPREBILL"
      ID: "{{MERCHANT_ID}}"
      PWD: "{{MERCHANT_PWD}}"
      ItemCount: "1"
      ItemType: "0"
      ItemInfo: "2|301|1|22S0HZ0100|상품명"
      AUTHKEY: "20250901101636D6FFC6"
      ORDERID: "{{ORDER_ID}}"
      OUTPUTOPTION: "3"
      TIDTYPE: "1"
      IFVERSION: "V1.1.2"
      BILLTYPE: "1"

    # 응답 데이터 추출
    extract:
      - name: "result"
        pattern: "Result"
        variable: "RESULT_CODE"
      - name: "errMsg"
        pattern: "ErrMsg"
        variable: "ERROR_MESSAGE"
      - name: "tid"
        pattern: "TID"
        variable: "TID"
      - name: "date"
        pattern: "Date"
        variable: "DATE"
      - name: "totalAmount"
        pattern: "TotalAmount"
        variable: "TOTAL_AMOUNT"
      - name: "cap"
        pattern: "Cap"
        variable: "CAP"
      - name: "orderid"
        pattern: "Orderid"
        variable: "ORDER_ID"
      - name: "dstAddr"
        pattern: "DstAddr"
        variable: "DSTADDR"
      - name: "carrier"
        pattern: "Carrier"
        variable: "CARRIER"
      - name: "dntid"
        pattern: "Dntid"
        variable: "DN_TID"
    
####################################################### Assertion ###########################################################

    test:
      - name: "결과 코드(RESULT) 정상 출력"
        assertion: "RESULT_CODE == 0"

      - name: "결과 메시지(ErrMsg) 정상 출력" 
        assertion: "ERROR_MESSAGE == No Information"
            
      - name: "거래 번호(TID) 정상 출력"
        assertion: "js: (
          TID !== null &&
          typeof TID !== 'undefined' &&
          typeof TID === 'string' &&
          TID.trim().length === 18)"

      - name: "결제 완료 시간(Date) 정상 출력_1"
        assertion: "js: (
          DATE !== null &&
          typeof DATE !== 'undefined' &&
          typeof DATE === 'string' &&
          DATE.trim().length === 14)"

      - name: "결제 완료 시간(Date) 정상 출력_2"
        description: "Date가 현재 시각(yyyymmddhhmmss)과 일치하는지 확인"
        assertion: "js: (() => {
          const pad = n => String(n).padStart(2,'0');
          const d = new Date();
          const now12 = `${d.getFullYear()}${pad(d.getMonth()+1)}${pad(d.getDate())}${pad(d.getHours())}${pad(d.getMinutes())}`;
          return DATE.slice(0, 12) === now12;})()"

      - name: "전체 결제금액(TotalAmount) 정상 출력"
        assertion: "TOTAL_AMOUNT == 301"
      
      - name: "거래 전 한도 금액(CAP) 정상 출력"
        assertion: "CAP == 000000"

      - name: "CP 주문번호(ORDERID) 정상 출력"
        assertion: "js: (
          typeof ORDER_ID !== 'undefined' &&
          typeof ORDER_ID === 'string' &&
          ORDER_ID.trim().length > 0 &&
          ORDER_ID.includes('ORD'))"

      - name: "사용자 전화번호(DstAddr) 정상 출력"
        assertion: "DSTADDR == 01085402697"

      - name: "인증 받은 통신사 정보(Carrier) 정상 출력"
        assertion: "CARRIER == KTF"

      - name: "거래 번호(DNTID) 정상 출력_1"
        assertion: "js: DN_TID && DN_TID.trim().length > 0 && /^\\d{22}$/.test(DN_TID)"

      - name: "거래 번호(DNTID) 정상 출력_2"
        description: "DN_TID가 현재 시각(yyyymmddhhmmss)과 일치하는지 확인"
        assertion: "js: (() => {
          const pad = n => String(n).padStart(2,'0');
          const d = new Date();
          const now12 = `${d.getFullYear()}${pad(d.getMonth()+1)}${pad(d.getDate())}${pad(d.getHours())}${pad(d.getMinutes())}`;
          return DN_TID.slice(0, 12) === now12;})()"


# ** ----------------------------------------------------------------------------------------------------------------
#  * [2차 호출] BILL_CANCEL
#  * ----------------------------------------------------------------------------------------------------------------*

  - name: "BILL_CANCEL"
    description: "결제 취소 및 환불"

    args:
      Command: "BILL_CANCEL"
      IFVERSION: "V1.1.6"
      ID: "{{MERCHANT_ID}}"
      PWD: "{{MERCHANT_PWD}}"
      TID: "{{TID}}"

  # 응답 데이터 추출
    extract:
      - name: "Result"
        pattern: "Result"
        variable: "B_RESULT"
      - name: "ErrMsg"
        pattern: "ErrMsg"
        variable: "B_ErrMsg"
      - name: "ServerInfo"
        pattern: "ServerInfo"
        variable: "B_ServerInfo" 
      - name: DNTID"
        pattern: "DNTID"
        variable: "B_DNTID"
      - name: "Date"
        pattern: "Date"
        variable: "B_DATE"

    test:
      - name: "결과 코드(RESULT) 정상 출력"
        assertion: "B_RESULT == 0"

      - name: "결과 메시지(ErrMsg) 정상 출력"
        assertion: "B_ErrMsg ==No Information"

      - name: "거래인증 key(ServerInfo) 정상 출력"
        assertion: "js: B_ServerInfo !== null && B_ServerInfo.trim().length > 0 && typeof B_ServerInfo !== undefined" 

      - name: "거래 번호(DNTID) 정상 출력_1"
        assertion: "js: B_DNTID && B_DNTID.trim().length > 0 && /^\\d{22}$/.test(B_DNTID)"

      - name: "거래 번호(DNTID) 정상 출력_2"
        description: "DN_TID가 현재 시각(yyyymmddhhmm)과 일치하는지 확인"
        assertion: "js: (() => {
          const pad = n => String(n).padStart(2,'0');
          const d = new Date();
          const now12 = `${d.getFullYear()}${pad(d.getMonth()+1)}${pad(d.getDate())}${pad(d.getHours())}${pad(d.getMinutes())}`;
          return B_DNTID.slice(0, 12) === now12;})()"

      - name: "결제 완료 시간(Date) 정상 출력"
        description: "Date가 현재 시각(yyyymmddhhmm)과 일치하는지 확인"
        assertion: "js: (() => {
          const pad = n => String(n).padStart(2,'0');
          const d = new Date();
          const now12 = `${d.getFullYear()}${pad(d.getMonth()+1)}${pad(d.getDate())}${pad(d.getHours())}${pad(d.getMinutes())}`;
          return B_DATE.slice(0, 12) === now12;})()"


# 시나리오 설정
options:
  stopOnError: false
  timeout: 15000
  retryCount: 0